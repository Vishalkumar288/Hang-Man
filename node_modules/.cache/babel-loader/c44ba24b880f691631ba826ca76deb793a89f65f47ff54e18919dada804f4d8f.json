{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\my-react-app\\\\src\\\\components\\\\HangMan\\\\Fun.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameOn from './components/GameOn';\nimport Body from './components/Body';\nimport Death from './Death';\nimport Life from './components/Life';\nimport SeekingDeath from './components/SeekingDeath';\nimport YourSoul from './components/YourSoul';\nimport { showNotification as show, checkWin } from './Extra';\nimport './GameOn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Lifes = ['application', 'programming', 'interface', 'wizard'];\nlet selectedLife = Lifes[Math.floor(Math.random() * Lifes.length)];\nfunction Fun() {\n  _s();\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [Death, setDeath] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (selectedLife.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!Death.includes(letter)) {\n            setDeath(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, Death, playable]);\n  function playAgain() {\n    setPlayable(true);\n\n    // Empty Arrays\n    setCorrectLetters([]);\n    setDeath([]);\n    const random = Math.floor(Math.random() * Lifes.length);\n    selectedLife = Lifes[random];\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GameOn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Body, {\n        Death: Death\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Death, {\n        Death: Death\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Life, {\n        selectedLife: selectedLife,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SeekingDeath, {\n      correctLetters: correctLetters,\n      Death: Death,\n      selectedLife: selectedLife,\n      setPlayable: setPlayable,\n      playAgain: playAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourSoul, {\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Fun, \"TopZcfB9OVqIO2CnEE/MEiy3Q+M=\");\n_c = Fun;\nexport default Fun;\nvar _c;\n$RefreshReg$(_c, \"Fun\");","map":{"version":3,"names":["React","useState","useEffect","GameOn","Body","Death","Life","SeekingDeath","YourSoul","showNotification","show","checkWin","Lifes","selectedLife","Math","floor","random","length","Fun","playable","setPlayable","correctLetters","setCorrectLetters","setDeath","setShowNotification","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain"],"sources":["D:/New folder/my-react-app/src/components/HangMan/Fun.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GameOn from './components/GameOn';\r\nimport Body from './components/Body';\r\nimport Death from './Death';\r\nimport Life from './components/Life';\r\nimport SeekingDeath from './components/SeekingDeath';\r\nimport YourSoul from './components/YourSoul';\r\nimport { showNotification as show, checkWin } from './Extra';\r\n\r\nimport './GameOn.css';\r\n\r\nconst Lifes = ['application', 'programming', 'interface', 'wizard'];\r\nlet selectedLife = Lifes[Math.floor(Math.random() * Lifes.length)];\r\n\r\nfunction Fun() {\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [Death, setDeath] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleKeydown = event => {\r\n      const { key, keyCode } = event;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        const letter = key.toLowerCase();\r\n        if (selectedLife.includes(letter)) {\r\n          if (!correctLetters.includes(letter)) {\r\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        } else {\r\n          if (!Death.includes(letter)) {\r\n            setDeath(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => window.removeEventListener('keydown', handleKeydown);\r\n  }, [correctLetters, Death, playable]);\r\n\r\n  function playAgain() {\r\n    setPlayable(true);\r\n\r\n    // Empty Arrays\r\n    setCorrectLetters([]);\r\n    setDeath([]);\r\n\r\n    const random = Math.floor(Math.random() * Lifes.length);\r\n    selectedLife = Lifes[random];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GameOn />\r\n      <div className=\"game-container\">\r\n        <Body Death={Death} />\r\n        <Death Death={Death} />\r\n        <Life selectedLife={selectedLife} correctLetters={correctLetters} />\r\n      </div>\r\n      <SeekingDeath correctLetters={correctLetters} Death={Death} selectedLife={selectedLife} setPlayable={setPlayable} playAgain={playAgain} />\r\n      <YourSoul showNotification={showNotification} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Fun;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}